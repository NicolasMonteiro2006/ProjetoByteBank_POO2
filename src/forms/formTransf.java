/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package forms;

import beans.HistoricoTransacao;
import dao.HistoricoDAO;
import dao.contaCorrenteDAO;
import dao.contaDAO;
import dao.contaSalarioDAO;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author nicol
 */
public class formTransf extends javax.swing.JFrame {
private int idUsuarioLogado;
private formContaCorrente telaContaCorrente;
private formContaSalario telaContaSalario;

public void setIdUsuarioLogado(int idUsuario) {
    this.idUsuarioLogado = idUsuario;     
    carregarSaldo(idUsuario); 
    carregarHistoricoNaTabela();
    verificarTipoConta(idUsuario);
}

    
    /**
     * Creates new form formTransf
     */
    public formTransf() {
        initComponents();
        
        HistoricoDAO dao = new HistoricoDAO();
        carregarHistoricoNaTabela();
    }
    
    private void limparCampos() {
        txtUsuarioReceber.setText("");
        txtValorTransferir.setText("");
    }
    
    public void setTelaContaSalario(formContaSalario tela) {
    this.telaContaSalario = tela;
    }
    
    
    public void setTelaContaCorrente(formContaCorrente tela) {
    this.telaContaCorrente = tela;
    }
    
    public void verificarTipoConta(int idUsuario) {
    try {
        contaCorrenteDAO correnteDAO = new contaCorrenteDAO();
        contaSalarioDAO salarioDAO = new contaSalarioDAO();

        boolean temContaCorrente = correnteDAO.verificarContaCorrentePorId(idUsuario);
        boolean temContaSalario = salarioDAO.verificarContaSalarioPorId(idUsuario);

        if (!temContaCorrente && temContaSalario) {
            btnIrCS.setEnabled(false);
        } else {
            btnIrCS.setEnabled(true);
        }

    } catch (Exception e) {
        JOptionPane.showMessageDialog(this, "Erro ao verificar tipo de conta: " + e.getMessage());
        btnIrCS.setEnabled(false); //
    }
}

    
    public void carregarSaldo(int idUsuario) {
    try {
        contaCorrenteDAO daoCorrente = new contaCorrenteDAO();
        contaSalarioDAO daoSalario = new contaSalarioDAO();
        
        boolean temContaCorrente = daoCorrente.verificarContaCorrentePorId(idUsuario);
        boolean temContaSalario = daoSalario.verificarContaSalarioPorId(idUsuario);
        
        if (temContaCorrente && !temContaSalario) {
            double saldo = daoCorrente.buscarSaldoPorIdUsuario(idUsuario);
            txtSaldoTransf.setText(String.valueOf(saldo)); 
        } else {
            double saldo = daoSalario.buscarSaldoPorIdUsuarioSalario(idUsuario);
            txtSaldoTransf.setText(String.valueOf(saldo)); 
        }
        
       

        
        

    } catch (Exception e) {
        JOptionPane.showMessageDialog(this, "Erro ao carregar saldo: " + e.getMessage());
    }
}

    
    public void carregarHistoricoNaTabela() {
    try {
        HistoricoDAO dao = new HistoricoDAO();
        List<HistoricoTransacao> lista = dao.listarTransacoesPorTipo("Transferência");

        DefaultTableModel modelo = (DefaultTableModel) jTable1.getModel();
        modelo.setRowCount(0); 

        for (HistoricoTransacao t : lista) {
        modelo.addRow(new Object[]{
        t.getNomePagante(),
        t.getNomeRecebedor() != null ? t.getNomeRecebedor() : "-",
        t.getTipo(),
        String.format("R$ %.2f", t.getValor()),
        t.getDataTransacao().toLocalDateTime()
    });
}

    } catch (Exception e) {
        JOptionPane.showMessageDialog(this, "Erro ao carregar histórico: " + e.getMessage());
    }
}

   


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel3 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel1 = new javax.swing.JLabel();
        txtSaldoTransf = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jSeparator2 = new javax.swing.JSeparator();
        jLabel4 = new javax.swing.JLabel();
        txtValorTransferir = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txtUsuarioReceber = new javax.swing.JTextField();
        btnPagar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel6 = new javax.swing.JLabel();
        btnIrCS = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Transferencia");

        jLabel3.setFont(new java.awt.Font("Calibri", 1, 36)); // NOI18N
        jLabel3.setText("Banco ByteBank");

        jLabel1.setFont(new java.awt.Font("Calibri", 0, 25)); // NOI18N
        jLabel1.setText("Saldo Disponivel:");

        txtSaldoTransf.setEditable(false);
        txtSaldoTransf.setFont(new java.awt.Font("Calibri", 0, 25)); // NOI18N
        txtSaldoTransf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSaldoTransfActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Calibri", 1, 20)); // NOI18N
        jLabel2.setText("Transferencia");

        jLabel4.setFont(new java.awt.Font("Calibri", 0, 25)); // NOI18N
        jLabel4.setText("Valor a Transferir:");

        txtValorTransferir.setFont(new java.awt.Font("Calibri", 0, 25)); // NOI18N
        txtValorTransferir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtValorTransferirActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Calibri", 0, 25)); // NOI18N
        jLabel5.setText("Pagar para:");

        txtUsuarioReceber.setFont(new java.awt.Font("Calibri", 0, 25)); // NOI18N
        txtUsuarioReceber.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtUsuarioReceberActionPerformed(evt);
            }
        });

        btnPagar.setFont(new java.awt.Font("Calibri", 1, 25)); // NOI18N
        btnPagar.setText("Pagar");
        btnPagar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPagarActionPerformed(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Pagante", "Recebedor", "Tipo", "Valor", "Data da Transação"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jLabel6.setFont(new java.awt.Font("Calibri", 0, 25)); // NOI18N
        jLabel6.setText("Pagamentos:");

        btnIrCS.setFont(new java.awt.Font("Calibri", 1, 25)); // NOI18N
        btnIrCS.setText("Conta Salario");
        btnIrCS.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnIrCSActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSeparator1, javax.swing.GroupLayout.Alignment.TRAILING)
            .addComponent(jSeparator2, javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 801, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(61, 61, 61)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jLabel6)
                                .addGap(18, 18, 18)
                                .addComponent(btnIrCS))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtValorTransferir, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(71, 71, 71)
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtUsuarioReceber, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 15, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(270, 270, 270))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(325, 325, 325))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addComponent(txtSaldoTransf, javax.swing.GroupLayout.PREFERRED_SIZE, 274, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(154, 154, 154))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(btnPagar)
                        .addGap(354, 354, 354))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtSaldoTransf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtValorTransferir, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtUsuarioReceber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(34, 34, 34)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(btnIrCS))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 34, Short.MAX_VALUE)
                .addComponent(btnPagar)
                .addGap(26, 26, 26)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 226, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(14, 14, 14))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void txtSaldoTransfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSaldoTransfActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtSaldoTransfActionPerformed

    private void btnPagarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPagarActionPerformed

    try {
    int idPagante = idUsuarioLogado;

    
    String nomeRecebedor = txtUsuarioReceber.getText().trim();
    double valorTransferencia = Double.parseDouble(txtValorTransferir.getText().trim());

    
    double saldoAtual = Double.parseDouble(txtSaldoTransf.getText().trim());

   
    if (valorTransferencia > saldoAtual) {
        throw new Exception("Saldo insuficiente para a transferência.");
    }

    
    contaDAO dao = new contaDAO();
    int idRecebedor = dao.buscarIdPorNome(nomeRecebedor);

    
    contaCorrenteDAO contaDAO = new contaCorrenteDAO();
    contaDAO.transferirSaldo(idPagante, idRecebedor, valorTransferencia);
    
    

    
    HistoricoDAO hDAO = new HistoricoDAO();
    hDAO.registrarTransacao(idPagante, idRecebedor, "Transferência", valorTransferencia);

    
    carregarSaldo(idPagante);
    carregarHistoricoNaTabela();

    JOptionPane.showMessageDialog(this, "Transferência realizada com sucesso!");

    
    if (telaContaCorrente != null) {
    telaContaCorrente.atualizarDadosContaCorrente();
}

if (telaContaSalario != null) {
    telaContaSalario.atualizarDadosContaSalario();
}


} catch (NumberFormatException e) {
    JOptionPane.showMessageDialog(this, "Digite valores válidos em todos os campos numéricos.");
} catch (Exception e) {
    JOptionPane.showMessageDialog(this, "Erro ao transferir: " + e.getMessage());
}


    }//GEN-LAST:event_btnPagarActionPerformed

    private void txtUsuarioReceberActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtUsuarioReceberActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtUsuarioReceberActionPerformed

    private void txtValorTransferirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtValorTransferirActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtValorTransferirActionPerformed

    private void btnIrCSActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnIrCSActionPerformed
        formPagamentoSalario tela = new formPagamentoSalario();
        tela.setIdUsuarioLogado(this.idUsuarioLogado);
        tela.setTelaTransferencia(this); 
        tela.setVisible(true);



    }//GEN-LAST:event_btnIrCSActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(formTransf.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(formTransf.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(formTransf.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(formTransf.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new formTransf().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnIrCS;
    private javax.swing.JButton btnPagar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField txtSaldoTransf;
    private javax.swing.JTextField txtUsuarioReceber;
    private javax.swing.JTextField txtValorTransferir;
    // End of variables declaration//GEN-END:variables
}
